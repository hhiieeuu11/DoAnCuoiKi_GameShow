#if !defined(AFX_VIDEOCHATRECEIVER_H__C15962B8_1433_4270_8318_63C4FCFF8B0E__INCLUDED_)
#define AFX_VIDEOCHATRECEIVER_H__C15962B8_1433_4270_8318_63C4FCFF8B0E__INCLUDED_

#if _MSC_VER > 1000
#pragma once
#endif // _MSC_VER > 1000
// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.

/////////////////////////////////////////////////////////////////////////////
// CVideoChatReceiver wrapper class

class CVideoChatReceiver : public CWnd
{
protected:
	DECLARE_DYNCREATE(CVideoChatReceiver)
public:
	CLSID const& GetClsid()
	{
		static CLSID const clsid
			= { 0x7dd8afb4, 0x618d, 0x4067, { 0x98, 0x1a, 0x93, 0x45, 0xdf, 0xa, 0xfc, 0xf8 } };
		return clsid;
	}
	virtual BOOL Create(LPCTSTR lpszClassName,
		LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect,
		CWnd* pParentWnd, UINT nID,
		CCreateContext* pContext = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID); }

    BOOL Create(LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect, CWnd* pParentWnd, UINT nID,
		CFile* pPersist = NULL, BOOL bStorage = FALSE,
		BSTR bstrLicKey = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID,
		pPersist, bStorage, bstrLicKey); }

// Attributes
public:
	BOOL GetReceiveVideoStream();
	void SetReceiveVideoStream(BOOL);
	BOOL GetReceiveAudioStream();
	void SetReceiveAudioStream(BOOL);
	CString GetLicenseKey();
	void SetLicenseKey(LPCTSTR);
	BOOL GetEchoCanceler();
	void SetEchoCanceler(BOOL);
	long GetConferenceUserID();
	void SetConferenceUserID(long);
	long GetConferenceNumber();
	void SetConferenceNumber(long);
	BOOL GetCaptureMode();
	void SetCaptureMode(BOOL);
	BOOL GetVideoWindowAutoMax();
	void SetVideoWindowAutoMax(BOOL);
	CString GetCaptureOutputFolder();
	void SetCaptureOutputFolder(LPCTSTR);
	short GetCaptureFileType();
	void SetCaptureFileType(short);
	short GetMP4FrameRate();
	void SetMP4FrameRate(short);
	CString GetMP4Album();
	void SetMP4Album(LPCTSTR);
	long GetMP4AudioSamplerate();
	void SetMP4AudioSamplerate(long);
	long GetMP4Audiobitrate();
	void SetMP4Audiobitrate(long);
	short GetMP4Audiochannel();
	void SetMP4Audiochannel(short);
	CString GetMP4Author();
	void SetMP4Author(LPCTSTR);
	CString GetMP4Comment();
	void SetMP4Comment(LPCTSTR);
	CString GetMP4Copyright();
	void SetMP4Copyright(LPCTSTR);
	short GetMP4Height();
	void SetMP4Height(short);
	CString GetMP4Title();
	void SetMP4Title(LPCTSTR);
	long GetMP4Videobitrate();
	void SetMP4Videobitrate(long);
	short GetMP4Width();
	void SetMP4Width(short);
	short GetVideoWindowAspectRatio();
	void SetVideoWindowAspectRatio(short);
	BOOL GetUseDefaultVMR();
	void SetUseDefaultVMR(BOOL);

// Operations
public:
	void AboutBox();
	BOOL Listen(LPCTSTR strIPAddress, long iPortNo);
	void Disconnect();
	void ReceiverVideoNoVideoImage(LPCTSTR strBmpFile);
	CString GetIPAddress();
	BOOL SnapShot(long iIndex, LPCTSTR strFileName);
	void CloseOneToOneMode();
	void ShowOneToOneMode(short iIndex);
};

//{{AFX_INSERT_LOCATION}}
// Microsoft Visual C++ will insert additional declarations immediately before the previous line.

#endif // !defined(AFX_VIDEOCHATRECEIVER_H__C15962B8_1433_4270_8318_63C4FCFF8B0E__INCLUDED_)
