<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="panel1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAFcAAAArCAIAAACCSoOBAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAS
        dAAAEnQB3mYfeAAAFD5JREFUaEN9mueS40iuhetvl+itSEqqmnblvS+VN23H7N77/u9yvwOQKvXs7I04
        wUglk8nESQAJgFoJgs3V1c/v3n0ajTaiaDsMtxy0o3AXhOFOFAhqWM8Afu5EESMd2//ZCKPtONqJo90o
        2osNTEJnGPGKjQGfF4girh/D8FMcbxp0Nwg+jEYfguAzP9N0K02303QnSXaTdC/NDrL80HDkDeuhLSTp
        wQJxsg+sISTpYZIcZ8lZnlzkyeVKEMLCp3fveNPHKIKITV+ctw383AqDLfiKYGdAHG2CKNaAfnC8IfQ/
        P0c2TxxvGbYNULMRGvox0Se79giCT87Cr50fjYWPsJAkm4B5ktRZ2MtyxBbSDCEFiHDJ0wxShIXwUbw3
        YD9OD9PkFCLS+AwW3o+C31ZH6yAIfxMCXcPofRR/ADHXCII+htHHIPwwCt6zOUHwngFCCH4TIsf6KGCe
        tSBc55bPYODxD44g/IhIiLoE8WUQEQbklzpwHY0+ra5CBAqCIuyYImwPLOwvUeCi7vmeA6R1FViGs+Dt
        JHYcwMJvq8E6GJnkSIIAPUywKO4F5icSQpmR1Y9B7DBa4xrFjOTqPYL9XLDzxkgY9cLbVrtSuNKhhliE
        6JDeiQUpURhuBgGdaMFOxuZne5hD3FuE24Kw2Ha0fehZ3Oq1Q5Kbjlj/YZpqKq74hfer0gUkRFQ2Sqph
        kMAm83sHbYb5yODt7oKOXmBJ7tBPbjlrtJHfdCrUbg8qgOTLQBegYCMYLVjAHzkL22IBydnteCfCvkTE
        L2o/oO9J0wU1rgX7IR7KFMH6D8RmvMM8K9K3QeVYHN5hdfUDePfuPZ3ev4D34Ecw1CW8F3ruxNpIkCUv
        D3M9D8KNUfDZ3oXAiPd34KRHo83RKu4TL2ueNdzGK4V46AjIMQej7VEAdgKcd4RsYK9HCFzg/VGwNwp2
        DTtDY3t1tMXV6ODZ7SDcAivMHjAj9wS9frTK1dbBucC7w12W4lg6HVhZD1s9G4hUgvgyabW3Wv0ATgc7
        VvoHmcF6fsWuvZRX7Mlik4MUf44ni/a8pz9ogt1AEu5xDYKDIDgcroejYH80ou04DMMDkRL13tEdJBSA
        QTuElSQ+iqPDKDwAYcAL9iMQHtCZJscgS09ygxrZqYE2t47SmDHolRkq88aciDuwCa1Im6B4jOlxmMbH
        INEjDkn4H+jvZulRkZ8Y+tfRM1w1IedcnJzEMTgDSXKaJFxpeyeg5zRNwUnGmosTkOXHSXYY976D/rMs
        O8+yi5WqmJf5dZFfFdlVnl4U2SUNeugfV7dNddvWdw79rO8ctOtyXpfXoCovq/KiLM65wlEYiEEo42dT
        z5v6BowrBt/wSFVc1dWl4dwxri+Atbn6rctxfdU2c0dTX4+rK3qAT9gy5/huvISmuV9gqf+2rud1fT1c
        r8ryPCtOUlxjcVJV123z0rXfuubHSlPfj6t7rtZAQhoP7fhx0j5Nu+cetNunrnlsxw8+wIhYQEKCdnyL
        kOHoMA6P8/Scnkn7MO2eJq0/qGeNSmSYN811O0bIG4k6vrWG+OqJo8fQNXctQta39HTtvU34OJs8z6av
        A76AtdnXtbVvYH39O+31NXpeJ90TpNT1XVneFMVlnl+gGlF8FMX4S1i4mU1//jb7n/Xp/8KCJBl22BsL
        FnoghlFwz36iI1Whq+mCQxoBEKDML4JVbOqIaISetrnrGmZ7YOa6RH1AT9m4vm4qExtGENLQ36rQGikO
        gLUFWABTsZJp9zKdvA74CmbTb2sz5P+xvga+r8PI7EvXPjesubotirlRIHsxf7Efx8dlOZ9MfqzN/jWb
        /HtF+pxfVcWl4Yq2vZ61vr2enqq4LnNM5hzxHIOPOC2yM8NpVZxhuqvvtoMRbuIAe8YoqpLJMbcLngU0
        lkC/ppVJqv2GPAWXXBmwQJmzjHld3IzL+3H9COrqoa6fxvVTM35umte2ee3aL50az21D/2NV3pXFTV5c
        5/klLiCOehbQiKK8GjePTfNS168rGHCW9vLkOWKc5unZ31Zswp8TaWbJSYbLTE/SBJiDTOSuHEWO9zrk
        GIuC3STazzN5OKZlThts/jXlp2YzXGQJogrezpIrh3da/wL0i5c8vS7Smyq/K/O7PLvJU0N+W+YPZf5Y
        Fg9ldlvQr1tzPZXK0xUQUVyl8WkYHuK5ougQ7Sirm7K+zcvbFZPkOMscLhuLFrIB/jOJoUCSDOg9dp4L
        WXaUE4ok+5yCOiBiZ+HYPLymtUfc4cO1oZecq8NFdRag3lhILxzOiHVeFem8TG/gAjnz5FpI50V6W6Z3
        eXqbJ/MsvRZioPkLiLATABXGZ4UBZ+IhqlGW12U1z4s5LPQnkx1+C/EE23ADYggSyXAqypDf5CzLo6KA
        BYVi5JEBuSlxXryLXuQapjmlaNIvtMxnMPAzkdItEeFccO31kUNO55wsDq1kV21jMRBpBHRcl8kVsMZ1
        6Z2J36L/spQp0YCIc4HTNDyOgsN4dMDbS8y8nBflfIWFIowva9gxo0BXKfOv6EXi6lGARM0PANE4STTR
        0Wh1A3UgtuH8h6neFuRK3KzsAHdCzfTo9B02L4CQ7iPOi/yMYOHtqlPcXclVnl2W6aWEXEJhKBkmmS/K
        7LzKL6ocrwcX52V6VmXgPCdm4SwPcFtnmAmOk6v7BVFggr1ZgaF3hAuwOE6BMj83IlAfdht1EDAHwiSL
        Lwl7iZekCKYCEnXYQxk88wwvYk4oQNvdEdgmaxiD/4EFG4Pygys22YCEy9Da1LBF2rMCApf5KcCLE+nF
        IZEoBntmFnHDOdqzIKD5sa0ML2jAHZpHXGaB2bGxngU3JVMlMbIIdQcWIBcKtHp38gABTCkWc0oRFp5v
        YAFc8JZBjIUu+AAfowYC92aSM97BU30jJ+6EAlx+Rgx6bK76hEVaErD3xkJxg19AYx0nktyqDgNEitun
        wwSQDGl8kkSHHIeEieTnAMmZPSQrGZEsEPMf2IHCyAuAqduGS9pht93OJbOz4ETYhgs2wCUxYbQBOiwN
        sMmc57gVnTjuPtxmzY8sYIpAv1s9V0J4cgVtFf29ReTzJV2wY8zwJvYQUztcJ4GIiKMjyz5gQf7ViSAT
        CUbowkEaEzidmkI5BTzuuqCGyaMwwUUqsrnfNYgXG8OASwJzg3TQBt8YOALO7eTyXAD0FKT58QJkCjnJ
        Qn5ihYbjrBDi9DCCiOiAp6QLpekC57+7Q4ObRq+uZtJvuqCdWbCQcnAqDbOkS+elG4gT8caCFqq9Yidd
        PGNh0AUZ15WuCG9eXTAF6SmQYrtRePBiI6EyuyQQtAxKmVIPVo6Dz4+UJvTFlb5hFQcjIicHI63cD+P9
        LHcW5iUnZRLjzDFjAatOlLqyq4Lnea7w7gLcdows2sp5pfn4SFI0gcNynwQ5inZp2Bh7pOdXXsB4OUlI
        CmNN2LMvrRngO4G3VvzCAOYXBo07Jv5LQHL8d6S9tD3SQwSmB7D5Mc9qwBF5dBDugVSvwJSElTD6FMWf
        HVb5/BiFKpyCvhAcbcTRVhITAqj4BfjZ11GtcBxHm0msomiS0r8xCqysGH22MSqWCNEOnhmoHW+F8aYK
        sPFmFKuUwub04IhJdqJkO06342QrTjaj5LNDNdt4Q/VrK0MEwh6x8AJhdCBYQcFhZYUjQKQYx0rGAZ1+
        F6Zgh0lYm6qvVguz4qJV1rwKjBh9FRiC+uLXltVRPnmxUIWzvmq+EScbSQoLmzSC4IOoFAteSlQxB1ht
        ZicIN4NoI4g/B9GnIOK6yS3WMcAIijcDBGZX4k9h8tGg9aiHCVXIV5VpFO6NRkssSH6VW6yhGHkhuTUU
        BwDa3ALoWhSjFHrpCsv14q/WLfpV8IzjnSRRhU9I9zPMwZBiGmYCgH7dSg+K/LAoDokgy4LAgVscxcRR
        Hj6j8GYXXD0SU3s/SfcEVWhYq5arLXqrnbHPrjIQtBUlANWwlWSsnjhVU7mEVkc5S/GLxAJAPrLX8wx3
        ngu0yaxJnwBtxnMtq8uyJHBSAYaT8hRL41DE+VkmS857M1aee9+Rxo6VF0+ap0nzDDrH+KkdPzX1o5UM
        SLqV7ZKJz7pnwLBp+wImQONf/472uWufhOaFn+34ZVy/VOVTkT9k6V2a3KSWCKQpLvAiSciIJQ8+rBk/
        8uyke+m6p3H7UDd34/a26R6Eyb032sl9O3l0NO2Do+34+dSDtqGbPE2tPDHtvnJGXCWR4pYyJ4FnZc9a
        ffs6ab7O2m9g2n5b636sdT8XmLbfJ823bvzVMWm+MFjDJt/BrP3xhg78Puv+WFvG9Pe12e/rsz/Wp3+B
        temf0+7PrvmjqX/W5dcqfxHKl7J4zLMFKTdVAdHfeHZ9xuM/JtMv7fS5mz1NZs+T2Uu39tTNnjvr4dpO
        hKZ7akx+9TgmNsbQTl5ns59rsz/WJn+uJOFlNCLHIPaes8nd+JnNEerntn7tUX0FXf3NQbspv4yL13Hx
        UhXPdfk8Ll+aipFfALcc/shk/ANMm5/TsTBrIOX3tcnv61PogIK/1md/rU3+Pev+Nev+mrQ/u+YHmLQ/
        mvqVTDmJ5xErDAmr7prx1ymcTv6YTX90kxeJp70VkNa0476qbwkHi1L5clH1KIeG2vXdgAcmbMff2/rH
        ShQcBSOVWzmfvLynUqLVVMpsPuAWkNJX5S2oy1siDUUvGektYayCmaq4dSi24W5xU+U3Ki4V93XxMC4f
        2/rJIVPC0Bquzy0m07507dcBshd0HkVFaav6hqDAisu4t/O6vsOOJh1W9jSu7+vqzq+V6kC+NlY1z/N5
        ls1z1pbf5vnNfwdLvbeqxMOKqtqjbSJKTuOyOCkLok5hkfMZiJQsV1UkI1io4yBvUzXJi27QZ7GQxtBZ
        qng1F1Skc8DRFb6qLLmriMXiFmi9LRFDuY2KpV133zQ3VYVrOLJPDHt40LK8rMdz7jJGVRMPOvMeQ1jJ
        BtwiPyiLu/8fBVyIrzksbAejLXJBoibLDpV1WOJxvGDB4zldPVFRSO8ZixperavLq7q6rojGBqbotAY9
        Hg73UCG0uCgKvPeVJFEh7yojg+AVA0HjMU76qirP7VTX5xbCnrw4w7EXpeqoec6VR3i8hyugwTj9Zyyz
        AFPQp2ftq8xIR2OW7RfFcSmc9pAMvv8uySVLLwqlehWBfXleqqyI/IbqosaaKtv/XyA6BsUxNUELqquK
        kSW5PYpARCxIEoW09OtFTM4rOMYS/+7KCa38Z3Hy9cGvrsJ1YfUSGlgE2yvteOMF+M9lOrjarfJ6xRPB
        JNkdWDipytOqPGMfTIAFCwT8bDtin3OX9MY/HFh91XFeVRfo8ELy/4oSCq6rao7+C5bPOGTbMgqVjOGC
        CYvq1EJgi/zFgkjsDcqyAJN8mMpgaSJO4Q3MPGy72Bn6B5p+ZeHAWTBFQM5zk18b2LNghoD8CLxgQdme
        Ng2C+uRvSQv+CSjXIIDyOVGw2B+5XlydswChdX1RlGIBCgioYIFnYVAzQIT8jhwE12qJCM0s8YatNgws
        OJyIBQvyC2YR0R7hoHuEwovrZHKkce4XLZNTRqhEEFHRFKmr5DfXCAZPcakSkFkQnvIf4UsX+gX1zkz+
        jJW5eqMyshqM/wy/6EExbSgw7yjFzLELNsaqTPLQ+krWwz8m2AcEc8n2qW2At91PozjCSjjaCVa9TAgL
        cgc9ET0L9hr5ec3Fi8mpVaWx73HmFJb22THwIoF7t8K1p0ZY6ILWYb59edNUCJTOm9Vg5GfE/KQJXHFJ
        9q2Np9BQd9LnqrIZEa65C7AAY2FZcqS4Hs4sWycDSpnkilI01c45I8gI/KRUZSpXlU41BTsFJBImnfuX
        hRSVGfRfyukeERUVrCHDEaQdeFOpjFOQ4yCRwZTZuEA1BjoMKAjO31ngbpa9sZDnuB65VVMEQcsQC8w/
        nF+mj3qjHNCChX7y4ScvdQ9lpiSL0IdmPLA+k2f5UV4cqz4hHOdWqyHfwDiBuWsyH6VAmKhqiiahnVuc
        HfaTE6Sk4dUBzWCVAphFcn0g8u/I9jiujmRGVGJcRo2OQMuCNA/mgMUtLMKyQB7RLV4EO0qKOMuZCrW1
        fodvhu0NzuK2xtEYuSzAZIZc3uW63KvtCu7XqxHp8O+YRaHCizPw4vCijY3kFrL1pa5eKgIt5WeAkQeL
        /5r5f0qwI4gYWDhOrYKSO9H2Td3ri5Ys8hapm9+i4boAETw4DGOSEyXLvNpKMm/zFGwbXDinmJ4cMI0s
        uwTWf0HcgVzsKzmla/QKvjdie5X5HhGZLMCGWzoseJVGWfDib3L6m8xxkp54GQPw08WGgiTbTdJdiICC
        ON2P9Fcq0mGxxtJjFEr/IPD/YDmtNqHmZH7tCum2050kKMJ+EOgfKrQ9Padh+TiLPEpUOzjqH9cMqIzV
        tUi3CfkUmF0Rfft/HPpty1i5KX6v76crTjNaF0dHYf8XkL5o4WVFEIWH+ryHo7bk34I5rwXsW81HZR/a
        sWKbvSjeUe0k3oz1HywvFuwwIIpY+nHIxqrg5X+l4er/ynmDyk1qDP9EszPSHlHg5Dthy3D0y1iaQcP6
        ZavQor9zhOEx61fpSdzpcV4dxSxPlTiwkqUk8HiaS+Bqw09Aw6JUB4zqm69zyVUGbIBvh5U0uJ6ojGWr
        QYlyvIkU2LZFk/u2sDLTO64xG9vrtlmWPh8AGqbYuBstQJPjAt2bliymdx/09wvQDhusyuK+M+OYt5CU
        9y7EYWbV3eQH0Rr5MmZbaRsSzAfP1WbT1+nkRUmbV0H+Du9/7rrX6fTrdPJN6L5N2q9C943Otn0mNUBU
        eCQ76jqmfZ10X2zM96751oxf9ZV9/DgeP4x1fWoM9q3d80uBeXhL133p2i9tA/RJfjr5PjPQ0ISNpu36
        u4sHXxjvS+J1ZOjT7kfXftfytGAGPxKbkbPgMttGy+vaL/8Htp0cTEKrrLwAAAAASUVORK5CYII=
</value>
  </data>
  <data name="axVideoChatReceiver1.OcxState" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACFTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5BeEhvc3QrU3RhdGUBAAAABERhdGEHAgIAAAAJAwAAAA8DAAAAXAAAAAIB
        AAAAAQAAAAAoAAAAQ29weXJpZ2h0IChjKSAyMDEyIFZpc2NvbSBTb2Z0d2FyZSA1NjM1OAAAAAAfAAAA
        AAABAMhQAAAgOgAAAAAAAAAERGVtbwAAAAAAAAAAAAs=
</value>
  </data>
  <metadata name="tmrCountDown.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="ElipseNumberPeopleWatching.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>179, 17</value>
  </metadata>
  <metadata name="guna2Elipse1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>438, 17</value>
  </metadata>
</root>